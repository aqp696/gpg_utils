name: Release with GPG Signing

on:
  push:
    tags:
      - 'v*'  # Ejemplo: v1.0.0

jobs:
  build-and-release:
    runs-on: ubuntu-2404
    steps:
      # 1. Checkout cÃ³digo
      - name: Checkout repository
        # env:
        #   PATH: "/home/aqueipo/.asdf/shims:$PATH"
        uses: actions/checkout@v5

      # 2. Configurar GPG (clave privada como secret)
      - name: Set up GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}  # Opcional
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent
          gpgconf --launch gpg-agent

      # 3. Generar archivos (ajusta para tu proyecto)
      - name: Build Python scripts
        run: |
          mkdir -p release
          cp *.py release/
          zip -r release/scripts.zip *.py

      # 4. Generar SHA256SUMS y firmas
      - name: Generate checksums and signatures
        run: |
          echo "$GPG_PRIVATE_KEY_NO_PASS" | gpg --batch --import
          cd release
          sha256sum * > SHA256SUMS
          gpg --batch --yes --armor --detach-sign --output SHA256SUMS.sig SHA256SUMS
          # Firma individual opcional
          for file in *; do
            if [ "$file" != "SHA256SUMS" ] && [ "$file" != "SHA256SUMS.sig" ]; then
              gpg --batch --yes --armor --detach-sign --output "$file.sig" "$file"
            fi
          done
        env:
          GPG_PRIVATE_KEY_NO_PASS: ${{ secrets.GPG_PRIVATE_KEY_NO_PASS }}

      # 5. Subir archivos a la release (usando API de Gitea)
      - name: Create Release and Upload Assets
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}  # Token con permisos de escritura
        run: |
          TAG_NAME=${GITEA_REF#refs/tags/}
          REPO_PATH=$GITEA_REPOSITORY
          GITEA_URL="https://gitea.com/api/v1"
          RELEASE_URL="$GITEA_URL/repos/$REPO_PATH/releases"
          
          # Crear release
          curl -X POST \
            -H "Authorization: token $RELEASE_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "'"$TAG_NAME"'",
              "name": "Release '"$TAG_NAME"'",
              "body": "Release firmada. Verificar con GPG y SHA256SUMS."
            }' \
            "$RELEASE_URL"

          # Subir archivos (espera 5s para que la release se cree)
          sleep 5
          UPLOAD_URL="$GITEA_URL/repos/$REPO_PATH/releases/tags/$TAG_NAME/assets"
          
          for file in release/*; do
            curl -X POST \
              -H "Authorization: token $RELEASE_TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "$UPLOAD_URL?name=$(basename $file)"
          done